{"version":3,"file":"static/js/170.95302115.chunk.js","mappings":"qQAEaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,0jBAwBVE,EAAYF,EAAAA,EAAAA,IAAH,yDAITG,EAAcH,EAAAA,EAAAA,IAAH,2CAGXI,EAAUJ,EAAAA,EAAAA,IAAH,uCAGPK,GAAWL,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,sHAQRM,EAAgBN,EAAAA,EAAAA,IAAH,0CAGbO,EAASP,EAAAA,EAAAA,GAAH,uCAGNQ,EAASR,EAAAA,EAAAA,GAAH,yD,SCInB,EA/CqB,SAAC,GAAe,IAAbS,EAAY,EAAZA,MACZC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAUR,GAAIS,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAClBN,EAAS,CAACM,IACVJ,EAAU,OACb,IAAEK,OAAM,SAAAC,GACLN,EAAU,MACb,GACJ,GAAE,CAACN,IAEJ,IAGMa,EAAc,SAAAC,GAChB,GAAe,OAAXA,EACJ,OAAOA,EAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC/C,EACD,OAAc,OAAVf,GAA6B,QAAXE,GACX,UAACX,EAAD,YAAS,SAACL,EAAD,CAAY8B,GAAI,IAAhB,mBAAsC,sCAE5C,OAAVhB,GACO,UAACT,EAAD,WACFK,GAAQ,SAACV,EAAD,CAAY8B,GAAE,yBAAoBpB,GAAlC,mBAA+D,SAACV,EAAD,CAAY8B,GAAI,IAAhB,kBACvEhB,EAAMY,KAAI,SAAAK,GAAI,OAAI,UAAC5B,EAAD,YAAyB,gBAAK6B,IAAG,UA3B/C,mCA2B+C,OAAgBD,EAAKE,eAAiBC,IAAKH,EAAKH,KAAMO,MAAM,SAAQ,UAAC/B,EAAD,YAAa,0BAAK2B,EAAKK,MAAV,KAAmBL,EAAKM,aAAxB,QACjI,6CAdOC,EAcsBP,EAAKQ,aAbnCC,KAAKC,MAAc,GAARH,GAAc,SAcxB,4BAAK,sCAAmBP,EAAKW,aAC7B,4BAAK,oCAAiBlB,EAAYO,EAAKN,gBAHRM,EAAKpB,IAb7B,IAAA2B,CAaI,KAKf,UAAC/B,EAAD,oCAEI,UAACC,EAAD,YACI,SAACC,EAAD,WAAQ,SAACH,EAAD,CAAUwB,GAAE,OAAZ,qBACR,SAACrB,EAAD,WAAQ,SAACH,EAAD,CAAUwB,GAAE,UAAZ,wBACR,SAAC,KAAD,kBAbhB,CAoBH,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport styled from \"@emotion/styled\";\r\nexport const GoBackLink = styled(Link)`\r\n  font-family: Teko;\r\n  font-weight: 0;\r\n  font-size: 16px;\r\n  color: #ffffff;\r\n  background: linear-gradient(90deg, #818589 0%, #28a718 100%);\r\n  padding: 10px 47px;\r\n  border: none;\r\n  box-shadow: rgb(0, 0, 0) 0px 0px 0px 0px;\r\n  border-radius: 22px 50px;\r\n  transition: 327ms;\r\n  transform: translateY(0);\r\n  width: 55px;\r\n  &:hover,\r\n  &:focus {\r\n    transition: 327ms;\r\n    padding: 10px 50px;\r\n    transform: translateY(-0px);\r\n    background: linear-gradient(90deg, #818589 0%, #cfe70b 100%);\r\n    color: #ffffff;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\nmargin-top:50px;\r\ndisplay:flex;\r\n`\r\nexport const Description = styled.div`\r\nmargin-left:50px;\r\n`\r\nexport const Details = styled.div`\r\npadding:15px;\r\n`\r\nexport const InfoLink = styled(Link)`\r\ncolor:black;\r\ntext-decoration:none;\r\n:hover{\r\n    background-color:red;\r\n    color:white;\r\n}\r\n`\r\nexport const InfoContainer = styled.div`\r\nmargin-top:40px;\r\n`\r\nexport const InfoUl = styled.ul`\r\npadding:15px;\r\n`\r\nexport const InfoLi = styled.li`\r\ncolor:red;\r\nmargin-bottom:15px;\r\n`","import { fetchById } from \"components/fetch\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Outlet, useParams } from \"react-router-dom\"\r\nimport { GoBackLink, InfoLi, Container, Description, Details, InfoLink, InfoContainer, InfoUl } from \"./MovieDetails.styled\";\r\nimport PropTypes from \"prop-types\";\r\nconst imageUrl = \"https://image.tmdb.org/t/p/w300\";\r\nconst MovieDetails = ({ query }) => {\r\n    const { id } = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n    const [status, setStatus] = useState('');\r\n    useEffect(() => {\r\n        fetchById(id).then(({ data }) => {\r\n            setMovie([data]);\r\n            setStatus(\"good\");\r\n        }).catch(eror => {\r\n            setStatus(\"bad\")\r\n        });\r\n    }, [id]);\r\n\r\n    const movieScore = score => {\r\n        return Math.floor(score * 10) + '%';\r\n    };\r\n    const movieGanres = genres => {\r\n        if (genres === null) return;\r\n        return genres.map(genre => genre.name).join(', ');\r\n    }\r\n    if (movie === null && status === \"bad\") {\r\n        return <Details><GoBackLink to={\"/\"}>back</GoBackLink><p>No DATA</p></Details>\r\n    }\r\n    if (movie !== null) {\r\n        return <Details>\r\n            {query ? <GoBackLink to={`/movies/search/${query}`}>back</GoBackLink> : <GoBackLink to={\"/\"}>back</GoBackLink>}\r\n            {movie.map(item => <Container key={item.id}><img src={`${imageUrl}${item.backdrop_path}`} alt={item.name} width=\"600\" /><Description><h2>{item.title} ({item.release_date})</h2>\r\n                <p>{`User Score:${movieScore(item.vote_average)}`}</p>\r\n                <div><h3>OverView:</h3>{item.overview}</div>\r\n                <div><h3>Genres:</h3>{movieGanres(item.genres)}</div></Description>\r\n            </Container>)}\r\n            <InfoContainer >\r\n                Aditional Information\r\n                <InfoUl>\r\n                    <InfoLi><InfoLink to={`cast`} >cast</InfoLink></InfoLi>\r\n                    <InfoLi><InfoLink to={`reviews`} >reviews</InfoLink></InfoLi>\r\n                    <Outlet />\r\n                </InfoUl>\r\n            </InfoContainer>\r\n\r\n        </Details >\r\n\r\n    }\r\n}\r\nMovieDetails.propTypes = {\r\n    query: PropTypes.string.isRequired,\r\n};\r\nexport default MovieDetails;"],"names":["GoBackLink","styled","Link","Container","Description","Details","InfoLink","InfoContainer","InfoUl","InfoLi","query","id","useParams","useState","movie","setMovie","status","setStatus","useEffect","fetchById","then","data","catch","eror","movieGanres","genres","map","genre","name","join","to","item","src","backdrop_path","alt","width","title","release_date","score","vote_average","Math","floor","overview"],"sourceRoot":""}